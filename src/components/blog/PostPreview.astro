---
import type { CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
// import FormattedDate from "../FormattedDate.astro";
import { Image } from "astro:assets";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { post, withDesc = false } = Astro.props;
// const postDate = post.data.updatedDate ?? post.data.publishDate;
---

<!-- <FormattedDate date={postDate} class="min-w-[120px] text-gray-500" /> --><!-- <Tag> -->
<div class="post-card1">
	<a href={`/posts/${post.slug}/`} class="cactus-link" rel="prefetch">
		<!-- {post.data.tags} -->

		{/* Check if coverImage exists and is an object */}
		{
			post.data.coverImage && typeof post.data.coverImage === "object" ? (
				<Image
					src={post.data.coverImage.src}
					alt={post.data.coverImage.alt}
					class="object-cover"
					loading="eager"
					fetchpriority="high"
				/>
			) : null
		}

		{/* Check if coverImage exists and is a string */}
		{
			typeof post.data.coverImage === "string" ? (
				<img id="1" src={import.meta.env.BASE_URL + post.data.coverImage} alt="" />
			) : null
		}

		{post.data.title}
	</a>
	{withDesc && <q class="line-clamp-3 block italic">{post.data.description}</q>}
</div>
<!-- </Tag> -->
